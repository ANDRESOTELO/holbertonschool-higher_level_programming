The ``1-my_list`` module
======================

Using ``MyList``

======================

This is a text file test. First import the class
``MyList`` from the ``1-my_list`` module:

    >>> MyList = __import__('1-my_list').MyList

======================
DOCSTRING
======================
check class docstring:
    >>> MyList.__doc__ != None
    True

Checking docstring mod:
    >>> __import__('1-my_list').__doc__ != None
    True

======================
TEST 
======================
Normal cases:

    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)

    >>> print(my_list)
    [1, 4, 2, 3, 5]

    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Alpha case:

    >>> my_list = MyList()
    >>> my_list.append("c")
    >>> my_list.append("b")
    >>> my_list.append("a")
    >>> my_list.append("d")

    >>> print(my_list)
    ['c', 'b', 'a', 'd']

    >>> my_list.print_sorted()
    ['a', 'b', 'c', 'd']

==================================
Edge cases:
==================================

Empty list:
    >>> my_list = MyList()

    >>> print(my_list)
    []
    >>> my_list.print_sorted()
    []

Not at integer:

    >>> my_list = MyList()
    >>> my_list.append("c")
    >>> my_list.append(1)
    >>> my_list.append("a")

    >>> my_list.print_sorted()
    Traceback (most recent call last):
    ...
    TypeError: unorderable types: int() < str()

Not append:
    >>> my_list = MyList()
    >>> my_list.append()
    Traceback (most recent call last):
    ...
    TypeError: append() takes exactly one argument (0 given)

Negative integers:
    >>> my_list = MyList()
    >>> my_list.append(-2)
    >>> my_list.append(-5)
    >>> my_list.append(1)

    >>> print(my_list)
    [-2, -5, 1]
    >>> my_list.print_sorted()
    [-5, -2, 1]
